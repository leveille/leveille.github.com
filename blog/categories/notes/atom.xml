<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Notes | Jason Leveille]]></title>
  <link href="http://jasonleveille.com/blog/categories/notes/atom.xml" rel="self"/>
  <link href="http://jasonleveille.com/"/>
  <updated>2013-01-15T09:59:55-05:00</updated>
  <id>http://jasonleveille.com/</id>
  <author>
    <name><![CDATA[Jason Leveille]]></name>
    <email><![CDATA[i@leve.us]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Debian & Ubuntu: Adding a StartUp Script]]></title>
    <link href="http://jasonleveille.com/blog/2013/01/debian-ubuntu-adding-a-startup-script/"/>
    <updated>2013-01-15T07:39:00-05:00</updated>
    <id>http://jasonleveille.com/blog/2013/01/debian-ubuntu-adding-a-startup-script</id>
    <content type="html"><![CDATA[<p>I recently had the need to run some code with each server restart.  <a href="http://manpages.ubuntu.com/manpages/precise/en/man8/update-rc.d.8.html">update-rc.d</a> provides a great and easy way execute your own code on server startup (in my case, Ubuntu 12.04).</p>

<!--more-->


<p>As root, create your script:</p>

<p>```bash spaghetti.sh</p>

<h1>!/bin/sh</h1>

<p>mkdir /tmp/spaghetti &amp;&amp; touch /tmp/spaghetti/meatballs.txt<br/>
```</p>

<p>Make the script executable:</p>

<p><code>bash
root@cameron ~ % chmod +x spaghetti.sh
</code></p>

<p>Add your script to <code>/etc/init.d</code>:</p>

<p><code>bash
root@cameron ~ % mv spaghetti.sh /etc/init.d
</code></p>

<p>Run <code>update-rc.d</code> on the new script:</p>

<p><code>bash
root@cameron ~ % update-rc.d spaghetti.sh defaults
</code></p>

<p>Enjoy.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux: Extending a Logical Volume]]></title>
    <link href="http://jasonleveille.com/blog/2013/01/linux-extending-logical-volume/"/>
    <updated>2013-01-14T12:07:00-05:00</updated>
    <id>http://jasonleveille.com/blog/2013/01/linux-extending-logical-volume</id>
    <content type="html"><![CDATA[<p>One of the servers I'm working with started running out of disk space recently.  The machine is running on a Ubuntu VM in Windows, about 200 miles from my desk.  I have remote access to the VM, but I don't have access to the virtualization software.  After requesting a disk resize through the IT company that manages our Windows network, here's what I saw:</p>

<!--more-->


<p><code>bash
root@outlays:~# df -h
Filesystem                Size  Used Avail Use% Mounted on
/dev/mapper/outlays-root   14G   14G    0G 100% /
...
</code></p>

<p>The request I made was to increase the disk space from 14G to ~40G.  That additional space doesn't show up, as it's free space on the disk (it hasn't yet been assigned to a volume).  Running the <code>vgdisplay</code> will show the additional space (<strong>Free  PE / Size</strong>):</p>

<p><code>bash http://linux.die.net/man/8/vgdisplay
root@outlays:~# vgdisplay
  --- Volume group ---
  VG Name               outlays
  ...
  VG Size               39.76 GiB
  Free  PE / Size       6412 / 25.05 GiB
</code></p>

<p>So, the disk was expanded, however I needed to assign that free space to /dev/mapper/outlays-root ... I wasn't sure how.  A bit of Googling brought me to this article: <a href="http://www.dbvisit.com/forums/showthread.php?t=343">Extending LVM disks in Linux using VMWare virtual disks</a>.  The solution seemed to be to extend the /dev/mapper/outlays-root by the amount of freespace available in the volume group.  First, I wanted to check out the /dev/mapper/outlays-root disk:</p>

<p><code>bash http://linux.die.net/man/8/parted
root@outlays:~# parted
(parted) print all
...
Model: Linux device-mapper (linear) (dm)
Disk /dev/mapper/outlays-root: 14GB
Sector size (logical/physical): 512B/512B
Partition Table: loop
...
</code></p>

<p>And running the <code>lvdisplay</code> command shows the following:</p>

<p><code>bash http://linux.die.net/man/8/lvdisplay
root@outlays:~# lvdisplay
  --- Logical volume ---
  LV Name                /dev/outlays/root
  VG Name                outlays
  ...
  LV Size                14 GiB
</code></p>

<p>So, the assumption I made here was the /dev/mapper/outlays-root maps to /dev/outlays/root.  Alright, I needed to expand /dev/outlays/root.  Expanding the disk was as simple as running the following commands:</p>

<p><code>bash http://linux.die.net/man/8/lvextend
lvextend -L+25G /dev/outlays/root
</code></p>

<p><code>bash http://linux.die.net/man/8/resize2fs
resize2fs /dev/outlays/root
</code></p>

<p>Now, here's the amount of disk space I have:</p>

<p><code>
root@outlays:~# df -h
Filesystem                Size  Used Avail Use% Mounted on
/dev/mapper/outlays-root   39G  8.7G   28G  24% /
...
</code></p>

<p>Much better.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Giving Your Images an Extra Squeeze]]></title>
    <link href="http://jasonleveille.com/blog/2013/01/giving-your-images-an-extra-squeeze/"/>
    <updated>2013-01-04T16:45:00-05:00</updated>
    <id>http://jasonleveille.com/blog/2013/01/giving-your-images-an-extra-squeeze</id>
    <content type="html"><![CDATA[<p>Images are the main contender when it comes to page weight.</p>

<p><blockquote><p>According to the latest HTTP archive stats, the average Web page weighs 1286KB, and 60% of that is image data.<br/>...<br/>Yet, when we look at the actual numbers “in the wild”, we see that few developers actually compress their images, and even for those that do, the results are not always ideal.</p><footer><strong>Yoav Weiss @yoavweiss</strong> <cite><a href='http://calendar.perfplanet.com/2012/giving-your-images-an-extra-squeeze/'>Perf Planet: Giving Your Images an Extra Squeeze</a></cite></footer></blockquote></p>

<p>This articles provides a range of options for optimizing any image type.  There wasn't much new here for me.  Perhaps most importantly, this serves as a reminder that we should all be thinking about image compression during any sort of build process.</p>

<p><strong>Original Article</strong>: <a href="http://calendar.perfplanet.com/2012/giving-your-images-an-extra-squeeze/">Giving Your Images An Extra Squeeze</a></p>
]]></content>
  </entry>
  
</feed>
